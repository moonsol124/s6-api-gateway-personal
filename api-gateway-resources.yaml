# api-gateway-resources.yaml

# --- Namespace (Assumes 'app-services' already exists) ---
# --- Secrets ('gateway-oauth-client-credentials', 'gateway-session-secret') must exist ---

# --- ConfigMap for API Gateway ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-config
  namespace: app-services
data:
  GATEWAY_PORT: "3002"
  NODE_ENV: "production" # Set explicitly for secure cookies etc.

  # URLs for internal services (using K8s DNS and Service Port 80)
  # PROPERTIES_SERVICE_URL: "http://properties-service-svc.app-services.svc.cluster.local:80"
  # OAUTH_SERVER_URL: "http://oauth-server-svc.app-services.svc.cluster.local:80"
  # USER_SERVICE_URL: "http://user-service-svc.app-services.svc.cluster.local:80"
  # You could potentially use the shorter names if guaranteed same namespace lookup works:
  PROPERTIES_SERVICE_URL: "http://properties-service-svc:80"
  OAUTH_SERVER_URL: "http://oauth-server-svc:80"
  USER_SERVICE_URL: "http://user-service-svc:80"

  # External URLs - CRITICAL for OAuth flow
  # These need to point to how the *outside world* (browser, external services)
  # will reach components, likely via an Ingress later.
  # For initial Minikube testing (if exposing gateway via NodePort):
  # Replace <MINIKUBE_IP> and <GATEWAY_NODEPORT> appropriately after deploying.
  # Or use a placeholder if planning for Ingress immediately.
  # GATEWAY_CALLBACK_URI: "http://<MINIKUBE_IP>:<GATEWAY_NODEPORT>/auth/callback" # NodePort Example
  GATEWAY_CALLBACK_URI: "http://my-app.local/auth/callback" # Placeholder for Ingress/DNS
  FRONTEND_URL: "http://my-app.local" # Placeholder for Ingress/DNS pointing to Frontend

---
# --- Deployment for the API Gateway ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
  namespace: app-services
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
      - name: api-gateway-container
        image: moonsol124/api-gateway:latest # Image from Docker Hub
        imagePullPolicy: Always
        ports:
        - containerPort: 3002 # Port from GATEWAY_PORT
        envFrom:
        - configMapRef:
            name: gateway-config # Load non-sensitive config
        - secretRef:
            name: gateway-oauth-client-credentials # Load OAUTH_CLIENT_ID, OAUTH_CLIENT_SECRET
        - secretRef:
            name: gateway-session-secret # Load SESSION_SECRET
---
# --- Service for API Gateway (Internal Access First) ---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-svc # Stable DNS name for internal access
  namespace: app-services
spec:
  selector:
    app: api-gateway # Selects pods labeled 'app: api-gateway'
  ports:
  - protocol: TCP
    port: 80            # Service listens on port 80 within the cluster
    targetPort: 3002    # Forwards traffic to container port 3002
  type: ClusterIP       # Start with internal only access